<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>ca.uvic.leadlab</groupId>
    <artifactId>cdxconnector</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>keytool-maven-plugin</artifactId>
                    <version>1.5</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>jaxws-maven-plugin</artifactId>
                    <version>2.5</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>

            <!-- Import Certificate Chain -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>keytool-maven-plugin</artifactId>
                <executions>
                    <!-- Root certificate -->
                    <execution>
                        <id>import-ROOT-certificate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>importCertificate</goal>
                        </goals>
                        <configuration>
                            <alias>ROOT</alias>
                            <file>${basedir}/certs/IHA_Root_CA(1).txt</file>
                            <keystore>${basedir}/certs/IHA_Truststore.jks</keystore>
                            <storepass>LEADlab</storepass>
                            <trustcacerts>true</trustcacerts>
                            <noprompt>true</noprompt>
                            <skipIfExist>true</skipIfExist>
                        </configuration>
                    </execution>
                    <!-- CA2 certificate -->
                    <execution>
                        <id>import-CA2-certificate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>importCertificate</goal>
                        </goals>
                        <configuration>
                            <alias>CA2</alias>
                            <file>${basedir}/certs/IHA_Issuing_CA2(1).txt</file>
                            <keystore>${basedir}/certs/IHA_Truststore.jks</keystore>
                            <storepass>LEADlab</storepass>
                            <trustcacerts>true</trustcacerts>
                            <noprompt>true</noprompt>
                            <skipIfExist>true</skipIfExist>
                        </configuration>
                    </execution>
                    <!-- C1 certificate -->
                    <execution>
                        <id>import-CA1-certificate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>importCertificate</goal>
                        </goals>
                        <configuration>
                            <alias>CA1</alias>
                            <file>${basedir}/certs/IHA_Issuing_CA1(1).txt</file>
                            <keystore>${basedir}/certs/IHA_Truststore.jks</keystore>
                            <storepass>LEADlab</storepass>
                            <trustcacerts>true</trustcacerts>
                            <noprompt>true</noprompt>
                            <skipIfExist>true</skipIfExist>
                        </configuration>
                    </execution>
                    <!-- Client certificate -->
                    <execution>
                        <id>import-client-certificate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>importKeystore</goal>
                        </goals>
                        <configuration>
                            <srckeystore>${basedir}/certs/LEADlab_IHA_cert.pfx</srckeystore>
                            <srcstoretype>PKCS12</srcstoretype>
                            <srcstorepass>LEADlab</srcstorepass>
                            <destkeystore>${basedir}/certs/LEADlab_Keystore.jks</destkeystore>
                            <deststoretype>JKS</deststoretype>
                            <deststorepass>LEADlab</deststorepass>
                            <noprompt>true</noprompt>
                            <skipIfExist>true</skipIfExist>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Generate Java classes from remote WSDLs -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxws-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-CDARequest-classes</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>wsimport</goal>
                        </goals>
                        <configuration>
                            <vmArgs>
                                <!--vmArg>-Djavax.net.ssl.trustStore=${basedir}/certs/IHA_Truststore.jks</vmArg>
                                <vmArg>-Djavax.net.ssl.trustStorePassword=LEADlab</vmArg-->>
                                <vmArg>-Djavax.net.ssl.keyStore=${basedir}/certs/LEADlab_Keystore.jks</vmArg>
                                <vmArg>-Djavax.net.ssl.keyStorePassword=LEADlab</vmArg>
                            </vmArgs>
                            <wsdlUrls>
                                <wsdlUrl>https://servicestest.bccdx.ca/CDArequestService/CDARequest.svc?WSDL</wsdlUrl>
                            </wsdlUrls>
                            <keep>true</keep>
                            <packageName>ca.bccdx</packageName>
                            <sourceDestDir>src/gen/java</sourceDestDir>
                        </configuration>
                    </execution>
                    <!--execution> TODO "already defined exception"
                        <id>generate-CDASubmit-classes</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>wsimport</goal>
                        </goals>
                        <configuration>
                            <vmArgs>
                                <!- -vmArg>-Djavax.net.ssl.trustStore=${basedir}/certs/IHA_Truststore.jks</vmArg>
                                <vmArg>-Djavax.net.ssl.trustStorePassword=LEADlab</vmArg- - >>
                                <vmArg>-Djavax.net.ssl.keyStore=${basedir}/certs/LEADlab_Keystore.jks</vmArg>
                                <vmArg>-Djavax.net.ssl.keyStorePassword=LEADlab</vmArg>
                            </vmArgs>
                            <wsdlUrls>
                                <wsdlUrl>https://servicestest.bccdx.ca/CDASubmitService/CDASubmit.svc?WSDL</wsdlUrl>
                            </wsdlUrls>
                            <keep>true</keep>
                            <packageName>ca.bccdx</packageName>
                            <sourceDestDir>src/gen/java</sourceDestDir>
                        </configuration>
                    </execution -->
                    <execution>
                        <id>generate-DistributionStatus-classes</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>wsimport</goal>
                        </goals>
                        <configuration>
                            <vmArgs>
                                <!--vmArg>-Djavax.net.ssl.trustStore=${basedir}/certs/IHA_Truststore.jks</vmArg>
                                <vmArg>-Djavax.net.ssl.trustStorePassword=LEADlab</vmArg-->>
                                <vmArg>-Djavax.net.ssl.keyStore=${basedir}/certs/LEADlab_Keystore.jks</vmArg>
                                <vmArg>-Djavax.net.ssl.keyStorePassword=LEADlab</vmArg>
                            </vmArgs>
                            <wsdlUrls>
                                <wsdlUrl>https://servicestest.bccdx.ca/DistributionStatusService/DistributionStatus.svc?WSDL</wsdlUrl>
                            </wsdlUrls>
                            <keep>true</keep>
                            <packageName>ca.bccdx</packageName>
                            <sourceDestDir>src/gen/java</sourceDestDir>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-providerQuery-classes</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>wsimport</goal>
                        </goals>
                        <configuration>
                            <vmArgs>
                                <!--vmArg>-Djavax.net.ssl.trustStore=${basedir}/certs/IHA_Truststore.jks</vmArg>
                                <vmArg>-Djavax.net.ssl.trustStorePassword=LEADlab</vmArg-->>
                                <vmArg>-Djavax.net.ssl.keyStore=${basedir}/certs/LEADlab_Keystore.jks</vmArg>
                                <vmArg>-Djavax.net.ssl.keyStorePassword=LEADlab</vmArg>
                            </vmArgs>
                            <wsdlUrls>
                                <wsdlUrl>https://servicestest.bccdx.ca/RegistrySearch/ProviderQuery.svc?WSDL</wsdlUrl>
                            </wsdlUrls>
                            <keep>true</keep>
                            <packageName>ca.bccdx</packageName>
                            <sourceDestDir>src/gen/java</sourceDestDir>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-clinicQuery-classes</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>wsimport</goal>
                        </goals>
                        <configuration>
                            <vmArgs>
                                <!--vmArg>-Djavax.net.ssl.trustStore=${basedir}/certs/IHA_Truststore.jks</vmArg>
                                <vmArg>-Djavax.net.ssl.trustStorePassword=LEADlab</vmArg-->>
                                <vmArg>-Djavax.net.ssl.keyStore=${basedir}/certs/LEADlab_Keystore.jks</vmArg>
                                <vmArg>-Djavax.net.ssl.keyStorePassword=LEADlab</vmArg>
                            </vmArgs>
                            <wsdlUrls>
                                <wsdlUrl>https://servicestest.bccdx.ca/RegistrySearch/ClinicQuery.svc?WSDL</wsdlUrl>
                            </wsdlUrls>
                            <keep>true</keep>
                            <packageName>ca.bccdx</packageName>
                            <sourceDestDir>src/gen/java</sourceDestDir>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Add generate source code into project structure -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-generate-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/gen/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
