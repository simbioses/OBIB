<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>ca.uvic.leadlab</groupId>
    <artifactId>cdxconnector</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <skip.wsdl.download>none</skip.wsdl.download>
        <!-- skip.wsdl.download>generate-sources</skip.wsdl.download --> <!-- Used to download the WSDL and XSD -->
        <server.url>http://localhost</server.url>
    </properties>

    <dependencies>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.11</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.8.1</version>
        </dependency>
    </dependencies>

    <distributionManagement>
        <repository>
            <id>internal</id>
            <url>file://${project.basedir}/../mvn-repo</url> <!-- temporary local mvn-repo -->
        </repository>
    </distributionManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>keytool-maven-plugin</artifactId>
                    <version>1.5</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>jaxws-maven-plugin</artifactId>
                    <version>2.5</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <version>1.0.0</version>
                </plugin>
                <plugin>
                    <groupId>com.github.dkschlos</groupId>
                    <artifactId>wsdlget-maven-plugin</artifactId>
                    <version>1.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.cxf</groupId>
                    <artifactId>cxf-codegen-plugin</artifactId>
                    <version>3.2.7</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>

            <!-- Import Certificate Chain -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>keytool-maven-plugin</artifactId>
                <executions>
                    <!-- Root certificate -->
                    <execution>
                        <id>import-ROOT-certificate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>importCertificate</goal>
                        </goals>
                        <configuration>
                            <alias>ROOT</alias>
                            <file>${basedir}/certs/IHA_Root_CA(1).txt</file>
                            <keystore>${basedir}/certs/IHA_Truststore.jks</keystore>
                            <storepass>LEADlab</storepass>
                            <trustcacerts>true</trustcacerts>
                            <noprompt>true</noprompt>
                            <skipIfExist>true</skipIfExist>
                        </configuration>
                    </execution>
                    <!-- CA2 certificate -->
                    <execution>
                        <id>import-CA2-certificate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>importCertificate</goal>
                        </goals>
                        <configuration>
                            <alias>CA2</alias>
                            <file>${basedir}/certs/IHA_Issuing_CA2(1).txt</file>
                            <keystore>${basedir}/certs/IHA_Truststore.jks</keystore>
                            <storepass>LEADlab</storepass>
                            <trustcacerts>true</trustcacerts>
                            <noprompt>true</noprompt>
                            <skipIfExist>true</skipIfExist>
                        </configuration>
                    </execution>
                    <!-- C1 certificate -->
                    <execution>
                        <id>import-CA1-certificate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>importCertificate</goal>
                        </goals>
                        <configuration>
                            <alias>CA1</alias>
                            <file>${basedir}/certs/IHA_Issuing_CA1(1).txt</file>
                            <keystore>${basedir}/certs/IHA_Truststore.jks</keystore>
                            <storepass>LEADlab</storepass>
                            <trustcacerts>true</trustcacerts>
                            <noprompt>true</noprompt>
                            <skipIfExist>true</skipIfExist>
                        </configuration>
                    </execution>
                    <!-- Client certificate -->
                    <execution>
                        <id>import-client-certificate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>importKeystore</goal>
                        </goals>
                        <configuration>
                            <srckeystore>${basedir}/certs/LEADlab_IHA_cert.pfx</srckeystore>
                            <srcstoretype>PKCS12</srcstoretype>
                            <srcstorepass>LEADlab</srcstorepass>
                            <destkeystore>${basedir}/certs/LEADlab_Keystore.jks</destkeystore>
                            <deststoretype>JKS</deststoretype>
                            <deststorepass>LEADlab</deststorepass>
                            <noprompt>true</noprompt>
                            <skipIfExist>true</skipIfExist>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Set the keystore into system properties -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>set-system-properties</id>
                        <phase>${skip.wsdl.download}</phase>
                        <goals>
                            <goal>set-system-properties</goal>
                        </goals>
                        <configuration>
                            <properties>
                                <property>
                                    <name>javax.net.ssl.keyStore</name>
                                    <value>${basedir}/certs/LEADlab_Keystore.jks</value>
                                </property>
                                <property>
                                    <name>javax.net.ssl.keyStoreType</name>
                                    <value>jks</value>
                                </property>
                                <property>
                                    <name>javax.net.ssl.keyStorePassword</name>
                                    <value>LEADlab</value>
                                </property>
                            </properties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Download the WSDLs and WSDs -->
            <plugin>
                <groupId>com.github.dkschlos</groupId>
                <artifactId>wsdlget-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <id>get-wsdl</id>
                        <phase>${skip.wsdl.download}</phase>
                        <goals>
                            <goal>wsdlget</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <outputPath>${project.basedir}/src/main/resources/wsdl</outputPath>
                    <wsdls>
                        <wsdl>
                            <serviceName>CDASubmit</serviceName>
                            <url>https://servicestest.bccdx.ca/CDASubmitService/CDASubmit.svc?WSDL</url>
                        </wsdl>
                        <wsdl>
                            <serviceName>CDARequest</serviceName>
                            <url>https://servicestest.bccdx.ca/CDArequestService/CDARequest.svc?WSDL</url>
                        </wsdl>
                        <wsdl>
                            <serviceName>DistributionStatus</serviceName>
                            <url>https://servicestest.bccdx.ca/DistributionStatusService/DistributionStatus.svc?WSDL</url>
                        </wsdl>
                        <wsdl>
                            <serviceName>ProviderQuery</serviceName>
                            <url>https://servicestest.bccdx.ca/RegistrySearch/ProviderQuery.svc?WSDL</url>
                        </wsdl>
                        <wsdl>
                            <serviceName>ClinicQuery</serviceName>
                            <url>https://servicestest.bccdx.ca/RegistrySearch/ClinicQuery.svc?WSDL</url>
                        </wsdl>
                    </wsdls>
                </configuration>
            </plugin>

            <!-- Generate Java classes from local WSDLs -->
            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-CDASubmit-classes</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                        <configuration>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>${project.basedir}/src/main/resources/wsdl/CDASubmit/CDASubmit.wsdl</wsdl>
                                    <wsdlLocation>${server.url}/CDASubmitService/CDASubmit.svc?WSDL</wsdlLocation>
                                    <extraargs>
                                        <extraarg>-impl</extraarg>
                                    </extraargs>
                                    <bindingFiles>
                                        <bindingFile>${project.basedir}/src/main/resources/wsdl/CDASubmit_jaxbBindings.xjb</bindingFile>
                                        <bindingFile>${project.basedir}/src/main/resources/wsdl/jaxbBindings.xjb</bindingFile>
                                        <bindingFile>${project.basedir}/src/main/resources/wsdl/jaxwsBindings.xjb</bindingFile>
                                    </bindingFiles>
                                </wsdlOption>
                            </wsdlOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-CDARequest-classes</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                        <configuration>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>${project.basedir}/src/main/resources/wsdl/CDARequest/CDARequest.wsdl</wsdl>
                                    <wsdlLocation>${server.url}/CDArequestService/CDARequest.svc?WSDL</wsdlLocation>
                                    <extraargs>
                                        <extraarg>-impl</extraarg>
                                    </extraargs>
                                    <bindingFiles>
                                        <bindingFile>${project.basedir}/src/main/resources/wsdl/jaxbBindings.xjb</bindingFile>
                                        <bindingFile>${project.basedir}/src/main/resources/wsdl/jaxwsBindings.xjb</bindingFile>
                                    </bindingFiles>
                                </wsdlOption>
                            </wsdlOptions>
                        </configuration>
                    </execution>
                    <!--execution>
                        <id>generate-DistributionStatus-classes</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                        <configuration>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>${project.basedir}/src/main/resources/wsdl/DistributionStatus/DistributionStatus.wsdl</wsdl>
                                    <wsdlLocation>${server.url}/DistributionStatusService/DistributionStatus.svc?WSDL</wsdlLocation>
                                    <extraargs>
                                        <extraarg>-impl</extraarg>
                                        <extraarg>-verbose</extraarg>
                                    </extraargs>
                                    <bindingFiles>
                                        <bindingFile>${project.basedir}/src/main/resources/wsdl/jaxbBindings.xjb</bindingFile>
                                        <bindingFile>${project.basedir}/src/main/resources/wsdl/jaxwsBindings.xjb</bindingFile>
                                    </bindingFiles>
                                </wsdlOption>
                            </wsdlOptions>
                        </configuration>
                    </execution-->
                    <execution>
                        <id>generate-providerQuery-classes</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                        <configuration>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>${project.basedir}/src/main/resources/wsdl/ProviderQuery/ProviderQuery.wsdl</wsdl>
                                    <wsdlLocation>${server.url}/RegistrySearch/ProviderQuery.svc?WSDL</wsdlLocation>
                                    <extraargs>
                                        <extraarg>-impl</extraarg>
                                        <extraarg>-verbose</extraarg>
                                    </extraargs>
                                    <bindingFiles>
                                        <bindingFile>${project.basedir}/src/main/resources/wsdl/jaxbBindings.xjb</bindingFile>
                                        <bindingFile>${project.basedir}/src/main/resources/wsdl/jaxwsBindings.xjb</bindingFile>
                                    </bindingFiles>
                                </wsdlOption>
                            </wsdlOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-clinicQuery-classes</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                        <configuration>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>${project.basedir}/src/main/resources/wsdl/ClinicQuery/ClinicQuery.wsdl</wsdl>
                                    <wsdlLocation>${server.url}/RegistrySearch/ClinicQuery.svc?WSDL</wsdlLocation>
                                    <extraargs>
                                        <extraarg>-impl</extraarg>
                                        <extraarg>-verbose</extraarg>
                                    </extraargs>
                                    <bindingFiles>
                                        <bindingFile>${project.basedir}/src/main/resources/wsdl/jaxbBindings.xjb</bindingFile>
                                        <bindingFile>${project.basedir}/src/main/resources/wsdl/jaxwsBindings.xjb</bindingFile>
                                    </bindingFiles>
                                </wsdlOption>
                            </wsdlOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Copy dependencies to a specific dir -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
