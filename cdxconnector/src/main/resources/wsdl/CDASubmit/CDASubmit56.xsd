<xs:schema elementFormDefault="qualified" targetNamespace="urn:hl7-org:v3"
           xmlns:b="http://schemas.microsoft.com/BizTalk/2003" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:include schemaLocation="CDASubmit54.xsd"/>
    <xs:annotation>
        <xs:documentation>
            Copyright (c) 2001, 2002, 2003, 2004, 2005, 2006 Health Level Seven.
            All rights reserved.

            Redistribution and use in source and binary forms, with or
            without modification, are permitted provided that the following
            conditions are met:
            1. Redistributions of source code must retain the above
            copyright notice, this list of conditions and the following
            disclaimer.
            2. Redistributions in binary form must reproduce the above
            copyright notice, this list of conditions and the following
            disclaimer in the documentation and/or other materials
            provided with the distribution.
            3. All advertising materials mentioning features or use of this
            software must display the following acknowledgement:

            This product includes software developed by Health Level Seven.

            THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS
            ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
            NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
            FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
            SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
            INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
            DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
            GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
            INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
            WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
            NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
            OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
            DAMAGE.

            Generated by $Id: datatypes.xsd,v 1.1 2006/05/23 23:03:14 wbeeler Exp $
        </xs:documentation>
    </xs:annotation>
    <xs:complexType name="PIVL_TS">
        <xs:annotation>
            <xs:documentation>
                Note: because this type is defined as an extension of SXCM_T,
                all of the attributes and elements accepted for T are also
                accepted by this definition. However, they are NOT allowed
                by the normative description of this type. Unfortunately,
                we cannot write a general purpose schematron contraints to
                provide that extra validation, thus applications must be
                aware that instance (fragments) that pass validation with
                this might might still not be legal.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
            <xs:extension base="q1:SXCM_TS" xmlns:q1="urn:hl7-org:v3">
                <xs:sequence>
                    <xs:element maxOccurs="1" minOccurs="0" name="phase" type="q1:IVL_TS">
                        <xs:annotation>
                            <xs:documentation>
                                A prototype of the repeating interval specifying the
                                duration of each occurrence and anchors the periodic
                                interval sequence at a certain point in time.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element maxOccurs="1" minOccurs="0" name="period" type="q1:PQ">
                        <xs:annotation>
                            <xs:documentation>
                                A time duration specifying a reciprocal measure of
                                the frequency at which the periodic interval repeats.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="alignment" type="q1:CalendarCycle" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            Specifies if and how the repetitions are aligned to
                            the cycles of the underlying calendar (e.g., to
                            distinguish every 30 days from &quot;the 5th of every
                            month&quot;.) A non-aligned periodic interval recurs
                            independently from the calendar. An aligned periodic
                            interval is synchronized with the calendar.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="false" name="institutionSpecified" type="q1:bl" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            Indicates whether the exact timing is up to the party
                            executing the schedule (e.g., to distinguish &quot;every 8
                            hours&quot; from &quot;3 times a day&quot;.)
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="EIVL_TS">
        <xs:annotation>
            <xs:documentation>
                Note: because this type is defined as an extension of SXCM_T,
                all of the attributes and elements accepted for T are also
                accepted by this definition. However, they are NOT allowed
                by the normative description of this type. Unfortunately,
                we cannot write a general purpose schematron contraints to
                provide that extra validation, thus applications must be
                aware that instance (fragments) that pass validation with
                this might might still not be legal.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
            <xs:extension base="q2:SXCM_TS" xmlns:q2="urn:hl7-org:v3">
                <xs:sequence>
                    <xs:element maxOccurs="1" minOccurs="0" name="event" type="q2:EIVL.event">
                        <xs:annotation>
                            <xs:documentation>
                                A code for a common (periodical) activity of daily
                                living based on which the event related periodic
                                interval is specified.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element maxOccurs="1" minOccurs="0" name="offset" type="q2:IVL_PQ">
                        <xs:annotation>
                            <xs:documentation>
                                An interval of elapsed time (duration, not absolute
                                point in time) that marks the offsets for the
                                beginning, width and end of the event-related periodic
                                interval measured from the time each such event
                                actually occurred.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="IVL_PQ">
        <xs:complexContent mixed="false">
            <xs:extension base="q3:SXCM_PQ" xmlns:q3="urn:hl7-org:v3">
                <xs:choice minOccurs="0">
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="low" type="q3:IVXB_PQ">
                            <xs:annotation>
                                <xs:documentation>
                                    The low limit of the interval.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:choice minOccurs="0">
                            <xs:element maxOccurs="1" minOccurs="0" name="width" type="q3:PQ">
                                <xs:annotation>
                                    <xs:documentation>
                                        The difference between high and low boundary. The
                                        purpose of distinguishing a width property is to
                                        handle all cases of incomplete information
                                        symmetrically. In any interval representation only
                                        two of the three properties high, low, and width need
                                        to be stated and the third can be derived.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element maxOccurs="1" minOccurs="0" name="high" type="q3:IVXB_PQ">
                                <xs:annotation>
                                    <xs:documentation>
                                        The high limit of the interval.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:choice>
                    </xs:sequence>
                    <xs:element maxOccurs="1" minOccurs="1" name="high" type="q3:IVXB_PQ">
                        <xs:annotation>
                            <xs:documentation/>
                        </xs:annotation>
                    </xs:element>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="width" type="q3:PQ">
                            <xs:annotation>
                                <xs:documentation>
                                    The difference between high and low boundary. The
                                    purpose of distinguishing a width property is to
                                    handle all cases of incomplete information
                                    symmetrically. In any interval representation only
                                    two of the three properties high, low, and width need
                                    to be stated and the third can be derived.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element maxOccurs="1" minOccurs="0" name="high" type="q3:IVXB_PQ">
                            <xs:annotation>
                                <xs:documentation>
                                    The high limit of the interval.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="center" type="q3:PQ">
                            <xs:annotation>
                                <xs:documentation>
                                    The arithmetic mean of the interval (low plus high
                                    divided by 2). The purpose of distinguishing the center
                                    as a semantic property is for conversions of intervals
                                    from and to point values.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element maxOccurs="1" minOccurs="0" name="width" type="q3:PQ">
                            <xs:annotation>
                                <xs:documentation>
                                    The difference between high and low boundary. The
                                    purpose of distinguishing a width property is to
                                    handle all cases of incomplete information
                                    symmetrically. In any interval representation only
                                    two of the three properties high, low, and width need
                                    to be stated and the third can be derived.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SXCM_PQ">
        <xs:complexContent mixed="false">
            <xs:extension base="q4:PQ" xmlns:q4="urn:hl7-org:v3">
                <xs:attribute default="I" name="operator" type="q4:SetOperator" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            A code specifying whether the set component is included
                            (union) or excluded (set-difference) from the set, or
                            other set operations with the current set component and
                            the set as constructed from the representation stream
                            up to the current point.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="IVXB_PQ">
        <xs:complexContent mixed="false">
            <xs:extension base="q5:PQ" xmlns:q5="urn:hl7-org:v3">
                <xs:attribute default="true" name="inclusive" type="q5:bl" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            Specifies whether the limit is included in the
                            interval (interval is closed) or excluded from the
                            interval (interval is open).
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="PPD_TS">
        <xs:annotation>
            <xs:appinfo>
                <diff>PPD_PQ</diff>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexContent mixed="false">
            <xs:extension base="q6:TS" xmlns:q6="urn:hl7-org:v3">
                <xs:sequence>
                    <xs:element maxOccurs="1" minOccurs="0" name="standardDeviation" type="q6:PQ">
                        <xs:annotation>
                            <xs:documentation>
                                The primary measure of variance/uncertainty of the
                                value (the square root of the sum of the squares of
                                the differences between all data points and the mean).
                                The standard deviation is used to normalize the data
                                for computing the distribution function. Applications
                                that cannot deal with probability distributions can
                                still get an idea about the confidence level by looking
                                at the standard deviation.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="distributionType" type="q6:ProbabilityDistributionType" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            A code specifying the type of probability distribution.
                            Possible values are as shown in the attached table.
                            The NULL value (unknown) for the type code indicates
                            that the probability distribution type is unknown. In
                            that case, the standard deviation has the meaning of an
                            informal guess.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="PPD_PQ">
        <xs:annotation>
            <xs:appinfo>
                <diff>PPD_PQ</diff>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexContent mixed="false">
            <xs:extension base="q7:PQ" xmlns:q7="urn:hl7-org:v3">
                <xs:sequence>
                    <xs:element maxOccurs="1" minOccurs="0" name="standardDeviation" type="q7:PQ">
                        <xs:annotation>
                            <xs:documentation>
                                The primary measure of variance/uncertainty of the
                                value (the square root of the sum of the squares of
                                the differences between all data points and the mean).
                                The standard deviation is used to normalize the data
                                for computing the distribution function. Applications
                                that cannot deal with probability distributions can
                                still get an idea about the confidence level by looking
                                at the standard deviation.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="distributionType" type="q7:ProbabilityDistributionType" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            A code specifying the type of probability distribution.
                            Possible values are as shown in the attached table.
                            The NULL value (unknown) for the type code indicates
                            that the probability distribution type is unknown. In
                            that case, the standard deviation has the meaning of an
                            informal guess.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="PIVL_PPD_TS">
        <xs:annotation>
            <xs:documentation>
                Note: because this type is defined as an extension of SXCM_T,
                all of the attributes and elements accepted for T are also
                accepted by this definition. However, they are NOT allowed
                by the normative description of this type. Unfortunately,
                we cannot write a general purpose schematron contraints to
                provide that extra validation, thus applications must be
                aware that instance (fragments) that pass validation with
                this might might still not be legal.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
            <xs:extension base="q8:SXCM_PPD_TS" xmlns:q8="urn:hl7-org:v3">
                <xs:sequence>
                    <xs:element maxOccurs="1" minOccurs="0" name="phase" type="q8:IVL_PPD_TS">
                        <xs:annotation>
                            <xs:documentation>
                                A prototype of the repeating interval specifying the
                                duration of each occurrence and anchors the periodic
                                interval sequence at a certain point in time.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element maxOccurs="1" minOccurs="0" name="period" type="q8:PPD_PQ">
                        <xs:annotation>
                            <xs:documentation>
                                A time duration specifying a reciprocal measure of
                                the frequency at which the periodic interval repeats.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="alignment" type="q8:CalendarCycle" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            Specifies if and how the repetitions are aligned to
                            the cycles of the underlying calendar (e.g., to
                            distinguish every 30 days from &quot;the 5th of every
                            month&quot;.) A non-aligned periodic interval recurs
                            independently from the calendar. An aligned periodic
                            interval is synchronized with the calendar.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="false" name="institutionSpecified" type="q8:bl" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            Indicates whether the exact timing is up to the party
                            executing the schedule (e.g., to distinguish &quot;every 8
                            hours&quot; from &quot;3 times a day&quot;.)
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SXCM_PPD_TS">
        <xs:complexContent mixed="false">
            <xs:extension base="q9:PPD_TS" xmlns:q9="urn:hl7-org:v3">
                <xs:attribute default="I" name="operator" type="q9:SetOperator" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            A code specifying whether the set component is included
                            (union) or excluded (set-difference) from the set, or
                            other set operations with the current set component and
                            the set as constructed from the representation stream
                            up to the current point.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="IVL_PPD_TS">
        <xs:complexContent mixed="false">
            <xs:extension base="q10:SXCM_PPD_TS" xmlns:q10="urn:hl7-org:v3">
                <xs:choice minOccurs="0">
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="low" type="q10:IVXB_PPD_TS">
                            <xs:annotation>
                                <xs:documentation>
                                    The low limit of the interval.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:choice minOccurs="0">
                            <xs:element maxOccurs="1" minOccurs="0" name="width" type="q10:PPD_PQ">
                                <xs:annotation>
                                    <xs:documentation>
                                        The difference between high and low boundary. The
                                        purpose of distinguishing a width property is to
                                        handle all cases of incomplete information
                                        symmetrically. In any interval representation only
                                        two of the three properties high, low, and width need
                                        to be stated and the third can be derived.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element maxOccurs="1" minOccurs="0" name="high" type="q10:IVXB_PPD_TS">
                                <xs:annotation>
                                    <xs:documentation>
                                        The high limit of the interval.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:choice>
                    </xs:sequence>
                    <xs:element maxOccurs="1" minOccurs="1" name="high" type="q10:IVXB_PPD_TS">
                        <xs:annotation>
                            <xs:documentation/>
                        </xs:annotation>
                    </xs:element>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="width" type="q10:PPD_PQ">
                            <xs:annotation>
                                <xs:documentation>
                                    The difference between high and low boundary. The
                                    purpose of distinguishing a width property is to
                                    handle all cases of incomplete information
                                    symmetrically. In any interval representation only
                                    two of the three properties high, low, and width need
                                    to be stated and the third can be derived.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element maxOccurs="1" minOccurs="0" name="high" type="q10:IVXB_PPD_TS">
                            <xs:annotation>
                                <xs:documentation>
                                    The high limit of the interval.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="center" type="q10:PPD_TS">
                            <xs:annotation>
                                <xs:documentation>
                                    The arithmetic mean of the interval (low plus high
                                    divided by 2). The purpose of distinguishing the center
                                    as a semantic property is for conversions of intervals
                                    from and to point values.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element maxOccurs="1" minOccurs="0" name="width" type="q10:PPD_PQ">
                            <xs:annotation>
                                <xs:documentation>
                                    The difference between high and low boundary. The
                                    purpose of distinguishing a width property is to
                                    handle all cases of incomplete information
                                    symmetrically. In any interval representation only
                                    two of the three properties high, low, and width need
                                    to be stated and the third can be derived.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="IVXB_PPD_TS">
        <xs:complexContent mixed="false">
            <xs:extension base="q11:PPD_TS" xmlns:q11="urn:hl7-org:v3">
                <xs:attribute default="true" name="inclusive" type="q11:bl" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            Specifies whether the limit is included in the
                            interval (interval is closed) or excluded from the
                            interval (interval is open).
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="EIVL_PPD_TS">
        <xs:annotation>
            <xs:documentation>
                Note: because this type is defined as an extension of SXCM_T,
                all of the attributes and elements accepted for T are also
                accepted by this definition. However, they are NOT allowed
                by the normative description of this type. Unfortunately,
                we cannot write a general purpose schematron contraints to
                provide that extra validation, thus applications must be
                aware that instance (fragments) that pass validation with
                this might might still not be legal.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
            <xs:extension base="q12:SXCM_PPD_TS" xmlns:q12="urn:hl7-org:v3">
                <xs:sequence>
                    <xs:element maxOccurs="1" minOccurs="0" name="event" type="q12:EIVL.event">
                        <xs:annotation>
                            <xs:documentation>
                                A code for a common (periodical) activity of daily
                                living based on which the event related periodic
                                interval is specified.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element maxOccurs="1" minOccurs="0" name="offset" type="q12:IVL_PPD_PQ">
                        <xs:annotation>
                            <xs:documentation>
                                An interval of elapsed time (duration, not absolute
                                point in time) that marks the offsets for the
                                beginning, width and end of the event-related periodic
                                interval measured from the time each such event
                                actually occurred.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="IVL_PPD_PQ">
        <xs:complexContent mixed="false">
            <xs:extension base="q13:SXCM_PPD_PQ" xmlns:q13="urn:hl7-org:v3">
                <xs:choice minOccurs="0">
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="low" type="q13:IVXB_PPD_PQ">
                            <xs:annotation>
                                <xs:documentation>
                                    The low limit of the interval.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:choice minOccurs="0">
                            <xs:element maxOccurs="1" minOccurs="0" name="width" type="q13:PPD_PQ">
                                <xs:annotation>
                                    <xs:documentation>
                                        The difference between high and low boundary. The
                                        purpose of distinguishing a width property is to
                                        handle all cases of incomplete information
                                        symmetrically. In any interval representation only
                                        two of the three properties high, low, and width need
                                        to be stated and the third can be derived.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element maxOccurs="1" minOccurs="0" name="high" type="q13:IVXB_PPD_PQ">
                                <xs:annotation>
                                    <xs:documentation>
                                        The high limit of the interval.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:choice>
                    </xs:sequence>
                    <xs:element maxOccurs="1" minOccurs="1" name="high" type="q13:IVXB_PPD_PQ">
                        <xs:annotation>
                            <xs:documentation/>
                        </xs:annotation>
                    </xs:element>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="width" type="q13:PPD_PQ">
                            <xs:annotation>
                                <xs:documentation>
                                    The difference between high and low boundary. The
                                    purpose of distinguishing a width property is to
                                    handle all cases of incomplete information
                                    symmetrically. In any interval representation only
                                    two of the three properties high, low, and width need
                                    to be stated and the third can be derived.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element maxOccurs="1" minOccurs="0" name="high" type="q13:IVXB_PPD_PQ">
                            <xs:annotation>
                                <xs:documentation>
                                    The high limit of the interval.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="center" type="q13:PPD_PQ">
                            <xs:annotation>
                                <xs:documentation>
                                    The arithmetic mean of the interval (low plus high
                                    divided by 2). The purpose of distinguishing the center
                                    as a semantic property is for conversions of intervals
                                    from and to point values.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element maxOccurs="1" minOccurs="0" name="width" type="q13:PPD_PQ">
                            <xs:annotation>
                                <xs:documentation>
                                    The difference between high and low boundary. The
                                    purpose of distinguishing a width property is to
                                    handle all cases of incomplete information
                                    symmetrically. In any interval representation only
                                    two of the three properties high, low, and width need
                                    to be stated and the third can be derived.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SXCM_PPD_PQ">
        <xs:complexContent mixed="false">
            <xs:extension base="q14:PPD_PQ" xmlns:q14="urn:hl7-org:v3">
                <xs:attribute default="I" name="operator" type="q14:SetOperator" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            A code specifying whether the set component is included
                            (union) or excluded (set-difference) from the set, or
                            other set operations with the current set component and
                            the set as constructed from the representation stream
                            up to the current point.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="IVXB_PPD_PQ">
        <xs:complexContent mixed="false">
            <xs:extension base="q15:PPD_PQ" xmlns:q15="urn:hl7-org:v3">
                <xs:attribute default="true" name="inclusive" type="q15:bl" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            Specifies whether the limit is included in the
                            interval (interval is closed) or excluded from the
                            interval (interval is open).
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SXPR_TS">
        <xs:complexContent mixed="false">
            <xs:extension base="q16:SXCM_TS" xmlns:q16="urn:hl7-org:v3">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="2" name="comp" type="q16:SXCM_TS">
                        <xs:annotation>
                            <xs:documentation/>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SXCM_CD">
        <xs:complexContent mixed="false">
            <xs:extension base="q17:CD" xmlns:q17="urn:hl7-org:v3">
                <xs:attribute default="I" name="operator" type="q17:SetOperator" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            A code specifying whether the set component is included
                            (union) or excluded (set-difference) from the set, or
                            other set operations with the current set component and
                            the set as constructed from the representation stream
                            up to the current point.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SXCM_MO">
        <xs:complexContent mixed="false">
            <xs:extension base="q18:MO" xmlns:q18="urn:hl7-org:v3">
                <xs:attribute default="I" name="operator" type="q18:SetOperator" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            A code specifying whether the set component is included
                            (union) or excluded (set-difference) from the set, or
                            other set operations with the current set component and
                            the set as constructed from the representation stream
                            up to the current point.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SXCM_INT">
        <xs:complexContent mixed="false">
            <xs:extension base="q19:INT" xmlns:q19="urn:hl7-org:v3">
                <xs:attribute default="I" name="operator" type="q19:SetOperator" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            A code specifying whether the set component is included
                            (union) or excluded (set-difference) from the set, or
                            other set operations with the current set component and
                            the set as constructed from the representation stream
                            up to the current point.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SXCM_REAL">
        <xs:complexContent mixed="false">
            <xs:extension base="q20:REAL" xmlns:q20="urn:hl7-org:v3">
                <xs:attribute default="I" name="operator" type="q20:SetOperator" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            A code specifying whether the set component is included
                            (union) or excluded (set-difference) from the set, or
                            other set operations with the current set component and
                            the set as constructed from the representation stream
                            up to the current point.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="IVL_INT">
        <xs:complexContent mixed="false">
            <xs:extension base="q21:SXCM_INT" xmlns:q21="urn:hl7-org:v3">
                <xs:choice minOccurs="0">
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="low" type="q21:IVXB_INT">
                            <xs:annotation>
                                <xs:documentation>
                                    The low limit of the interval.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:choice minOccurs="0">
                            <xs:element maxOccurs="1" minOccurs="0" name="width" type="q21:INT">
                                <xs:annotation>
                                    <xs:documentation>
                                        The difference between high and low boundary. The
                                        purpose of distinguishing a width property is to
                                        handle all cases of incomplete information
                                        symmetrically. In any interval representation only
                                        two of the three properties high, low, and width need
                                        to be stated and the third can be derived.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element maxOccurs="1" minOccurs="0" name="high" type="q21:IVXB_INT">
                                <xs:annotation>
                                    <xs:documentation>
                                        The high limit of the interval.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:choice>
                    </xs:sequence>
                    <xs:element maxOccurs="1" minOccurs="1" name="high" type="q21:IVXB_INT">
                        <xs:annotation>
                            <xs:documentation/>
                        </xs:annotation>
                    </xs:element>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="width" type="q21:INT">
                            <xs:annotation>
                                <xs:documentation>
                                    The difference between high and low boundary. The
                                    purpose of distinguishing a width property is to
                                    handle all cases of incomplete information
                                    symmetrically. In any interval representation only
                                    two of the three properties high, low, and width need
                                    to be stated and the third can be derived.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element maxOccurs="1" minOccurs="0" name="high" type="q21:IVXB_INT">
                            <xs:annotation>
                                <xs:documentation>
                                    The high limit of the interval.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="center" type="q21:INT">
                            <xs:annotation>
                                <xs:documentation>
                                    The arithmetic mean of the interval (low plus high
                                    divided by 2). The purpose of distinguishing the center
                                    as a semantic property is for conversions of intervals
                                    from and to point values.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element maxOccurs="1" minOccurs="0" name="width" type="q21:INT">
                            <xs:annotation>
                                <xs:documentation>
                                    The difference between high and low boundary. The
                                    purpose of distinguishing a width property is to
                                    handle all cases of incomplete information
                                    symmetrically. In any interval representation only
                                    two of the three properties high, low, and width need
                                    to be stated and the third can be derived.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="IVXB_INT">
        <xs:complexContent mixed="false">
            <xs:extension base="q22:INT" xmlns:q22="urn:hl7-org:v3">
                <xs:attribute default="true" name="inclusive" type="q22:bl" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            Specifies whether the limit is included in the
                            interval (interval is closed) or excluded from the
                            interval (interval is open).
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="IVL_REAL">
        <xs:complexContent mixed="false">
            <xs:extension base="q23:SXCM_REAL" xmlns:q23="urn:hl7-org:v3">
                <xs:choice minOccurs="0">
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="low" type="q23:IVXB_REAL">
                            <xs:annotation>
                                <xs:documentation>
                                    The low limit of the interval.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:choice minOccurs="0">
                            <xs:element maxOccurs="1" minOccurs="0" name="width" type="q23:REAL">
                                <xs:annotation>
                                    <xs:documentation>
                                        The difference between high and low boundary. The
                                        purpose of distinguishing a width property is to
                                        handle all cases of incomplete information
                                        symmetrically. In any interval representation only
                                        two of the three properties high, low, and width need
                                        to be stated and the third can be derived.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element maxOccurs="1" minOccurs="0" name="high" type="q23:IVXB_REAL">
                                <xs:annotation>
                                    <xs:documentation>
                                        The high limit of the interval.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:choice>
                    </xs:sequence>
                    <xs:element maxOccurs="1" minOccurs="1" name="high" type="q23:IVXB_REAL">
                        <xs:annotation>
                            <xs:documentation/>
                        </xs:annotation>
                    </xs:element>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="width" type="q23:REAL">
                            <xs:annotation>
                                <xs:documentation>
                                    The difference between high and low boundary. The
                                    purpose of distinguishing a width property is to
                                    handle all cases of incomplete information
                                    symmetrically. In any interval representation only
                                    two of the three properties high, low, and width need
                                    to be stated and the third can be derived.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element maxOccurs="1" minOccurs="0" name="high" type="q23:IVXB_REAL">
                            <xs:annotation>
                                <xs:documentation>
                                    The high limit of the interval.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="center" type="q23:REAL">
                            <xs:annotation>
                                <xs:documentation>
                                    The arithmetic mean of the interval (low plus high
                                    divided by 2). The purpose of distinguishing the center
                                    as a semantic property is for conversions of intervals
                                    from and to point values.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element maxOccurs="1" minOccurs="0" name="width" type="q23:REAL">
                            <xs:annotation>
                                <xs:documentation>
                                    The difference between high and low boundary. The
                                    purpose of distinguishing a width property is to
                                    handle all cases of incomplete information
                                    symmetrically. In any interval representation only
                                    two of the three properties high, low, and width need
                                    to be stated and the third can be derived.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="IVXB_REAL">
        <xs:complexContent mixed="false">
            <xs:extension base="q24:REAL" xmlns:q24="urn:hl7-org:v3">
                <xs:attribute default="true" name="inclusive" type="q24:bl" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            Specifies whether the limit is included in the
                            interval (interval is closed) or excluded from the
                            interval (interval is open).
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="IVL_MO">
        <xs:complexContent mixed="false">
            <xs:extension base="q25:SXCM_MO" xmlns:q25="urn:hl7-org:v3">
                <xs:choice minOccurs="0">
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="low" type="q25:IVXB_MO">
                            <xs:annotation>
                                <xs:documentation>
                                    The low limit of the interval.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:choice minOccurs="0">
                            <xs:element maxOccurs="1" minOccurs="0" name="width" type="q25:MO">
                                <xs:annotation>
                                    <xs:documentation>
                                        The difference between high and low boundary. The
                                        purpose of distinguishing a width property is to
                                        handle all cases of incomplete information
                                        symmetrically. In any interval representation only
                                        two of the three properties high, low, and width need
                                        to be stated and the third can be derived.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element maxOccurs="1" minOccurs="0" name="high" type="q25:IVXB_MO">
                                <xs:annotation>
                                    <xs:documentation>
                                        The high limit of the interval.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:choice>
                    </xs:sequence>
                    <xs:element maxOccurs="1" minOccurs="1" name="high" type="q25:IVXB_MO">
                        <xs:annotation>
                            <xs:documentation/>
                        </xs:annotation>
                    </xs:element>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="width" type="q25:MO">
                            <xs:annotation>
                                <xs:documentation>
                                    The difference between high and low boundary. The
                                    purpose of distinguishing a width property is to
                                    handle all cases of incomplete information
                                    symmetrically. In any interval representation only
                                    two of the three properties high, low, and width need
                                    to be stated and the third can be derived.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element maxOccurs="1" minOccurs="0" name="high" type="q25:IVXB_MO">
                            <xs:annotation>
                                <xs:documentation>
                                    The high limit of the interval.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="center" type="q25:MO">
                            <xs:annotation>
                                <xs:documentation>
                                    The arithmetic mean of the interval (low plus high
                                    divided by 2). The purpose of distinguishing the center
                                    as a semantic property is for conversions of intervals
                                    from and to point values.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element maxOccurs="1" minOccurs="0" name="width" type="q25:MO">
                            <xs:annotation>
                                <xs:documentation>
                                    The difference between high and low boundary. The
                                    purpose of distinguishing a width property is to
                                    handle all cases of incomplete information
                                    symmetrically. In any interval representation only
                                    two of the three properties high, low, and width need
                                    to be stated and the third can be derived.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="IVXB_MO">
        <xs:complexContent mixed="false">
            <xs:extension base="q26:MO" xmlns:q26="urn:hl7-org:v3">
                <xs:attribute default="true" name="inclusive" type="q26:bl" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            Specifies whether the limit is included in the
                            interval (interval is closed) or excluded from the
                            interval (interval is open).
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="HXIT_PQ">
        <xs:complexContent mixed="false">
            <xs:extension base="q27:PQ" xmlns:q27="urn:hl7-org:v3">
                <xs:sequence>
                    <xs:element maxOccurs="1" minOccurs="0" name="validTime" type="q27:IVL_TS">
                        <xs:annotation>
                            <xs:documentation>
                                The time interval during which the given information
                                was, is, or is expected to be valid. The interval can
                                be open or closed, as well as infinite or undefined on
                                either side.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="HXIT_CE">
        <xs:complexContent mixed="false">
            <xs:extension base="q28:CE" xmlns:q28="urn:hl7-org:v3">
                <xs:sequence>
                    <xs:element maxOccurs="1" minOccurs="0" name="validTime" type="q28:IVL_TS">
                        <xs:annotation>
                            <xs:documentation>
                                The time interval during which the given information
                                was, is, or is expected to be valid. The interval can
                                be open or closed, as well as infinite or undefined on
                                either side.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="BXIT_CD">
        <xs:complexContent mixed="false">
            <xs:extension base="q29:CD" xmlns:q29="urn:hl7-org:v3">
                <xs:attribute default="1" name="qty" type="q29:int" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            The quantity in which the bag item occurs in its containing bag.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="BXIT_IVL_PQ">
        <xs:complexContent mixed="false">
            <xs:extension base="q30:IVL_PQ" xmlns:q30="urn:hl7-org:v3">
                <xs:attribute default="1" name="qty" type="q30:int" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            The quantity in which the bag item occurs in its containing bag.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SLIST_PQ">
        <xs:complexContent mixed="false">
            <xs:extension base="q31:ANY" xmlns:q31="urn:hl7-org:v3">
                <xs:sequence>
                    <xs:element maxOccurs="1" minOccurs="1" name="origin" type="q31:PQ">
                        <xs:annotation>
                            <xs:documentation>
                                The origin of the list item value scale, i.e., the
                                physical quantity that a zero-digit in the sequence
                                would represent.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element maxOccurs="1" minOccurs="1" name="scale" type="q31:PQ">
                        <xs:annotation>
                            <xs:documentation>
                                A ratio-scale quantity that is factored out of the
                                digit sequence.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element maxOccurs="1" minOccurs="1" name="digits" type="q31:list_int">
                        <xs:annotation>
                            <xs:documentation>
                                A sequence of raw digits for the sample values. This is
                                typically the raw output of an A/D converter.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="list_int">
        <xs:list itemType="q32:int" xmlns:q32="urn:hl7-org:v3"/>
    </xs:simpleType>
    <xs:complexType name="SLIST_TS">
        <xs:complexContent mixed="false">
            <xs:extension base="q33:ANY" xmlns:q33="urn:hl7-org:v3">
                <xs:sequence>
                    <xs:element maxOccurs="1" minOccurs="1" name="origin" type="q33:TS">
                        <xs:annotation>
                            <xs:documentation>
                                The origin of the list item value scale, i.e., the
                                physical quantity that a zero-digit in the sequence
                                would represent.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element maxOccurs="1" minOccurs="1" name="scale" type="q33:PQ">
                        <xs:annotation>
                            <xs:documentation>
                                A ratio-scale quantity that is factored out of the
                                digit sequence.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element maxOccurs="1" minOccurs="1" name="digits" type="q33:list_int">
                        <xs:annotation>
                            <xs:documentation>
                                A sequence of raw digits for the sample values. This is
                                typically the raw output of an A/D converter.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="GLIST_TS">
        <xs:complexContent mixed="false">
            <xs:extension base="q34:ANY" xmlns:q34="urn:hl7-org:v3">
                <xs:sequence>
                    <xs:element maxOccurs="1" minOccurs="1" name="head" type="q34:TS">
                        <xs:annotation>
                            <xs:documentation>
                                This is the start-value of the generated list.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element maxOccurs="1" minOccurs="1" name="increment" type="q34:PQ">
                        <xs:annotation>
                            <xs:documentation>
                                The difference between one value and its previous
                                different value. For example, to generate the sequence
                                (1; 4; 7; 10; 13; ...) the increment is 3; likewise to
                                generate the sequence (1; 1; 4; 4; 7; 7; 10; 10; 13;
                                13; ...) the increment is also 3.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="period" type="q34:int" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            If non-NULL, specifies that the sequence alternates,
                            i.e., after this many increments, the sequence item
                            values roll over to start from the initial sequence
                            item value. For example, the sequence (1; 2; 3; 1; 2;
                            3; 1; 2; 3; ...) has period 3; also the sequence
                            (1; 1; 2; 2; 3; 3; 1; 1; 2; 2; 3; 3; ...) has period
                            3 too.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="denominator" type="q34:int" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            The integer by which the index for the sequence is
                            divided, effectively the number of times the sequence
                            generates the same sequence item value before
                            incrementing to the next sequence item value. For
                            example, to generate the sequence (1; 1; 1; 2; 2; 2; 3; 3;
                            3; ...) the denominator is 3.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="GLIST_PQ">
        <xs:complexContent mixed="false">
            <xs:extension base="q35:ANY" xmlns:q35="urn:hl7-org:v3">
                <xs:sequence>
                    <xs:element maxOccurs="1" minOccurs="1" name="head" type="q35:PQ">
                        <xs:annotation>
                            <xs:documentation>
                                This is the start-value of the generated list.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element maxOccurs="1" minOccurs="1" name="increment" type="q35:PQ">
                        <xs:annotation>
                            <xs:documentation>
                                The difference between one value and its previous
                                different value. For example, to generate the sequence
                                (1; 4; 7; 10; 13; ...) the increment is 3; likewise to
                                generate the sequence (1; 1; 4; 4; 7; 7; 10; 10; 13;
                                13; ...) the increment is also 3.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="period" type="q35:int" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            If non-NULL, specifies that the sequence alternates,
                            i.e., after this many increments, the sequence item
                            values roll over to start from the initial sequence
                            item value. For example, the sequence (1; 2; 3; 1; 2;
                            3; 1; 2; 3; ...) has period 3; also the sequence
                            (1; 1; 2; 2; 3; 3; 1; 1; 2; 2; 3; 3; ...) has period
                            3 too.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="denominator" type="q35:int" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            The integer by which the index for the sequence is
                            divided, effectively the number of times the sequence
                            generates the same sequence item value before
                            incrementing to the next sequence item value. For
                            example, to generate the sequence (1; 1; 1; 2; 2; 2; 3; 3;
                            3; ...) the denominator is 3.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="RTO_PQ_PQ">
        <xs:annotation>
            <xs:appinfo>
                <diff>RTO_PQ_PQ</diff>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexContent mixed="false">
            <xs:extension base="q36:QTY" xmlns:q36="urn:hl7-org:v3">
                <xs:sequence>
                    <xs:element name="numerator" type="q36:PQ">
                        <xs:annotation>
                            <xs:documentation>
                                The quantity that is being divided in the ratio. The
                                default is the integer number 1 (one).
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="denominator" type="q36:PQ">
                        <xs:annotation>
                            <xs:documentation>
                                The quantity that devides the numerator in the ratio.
                                The default is the integer number 1 (one).
                                The denominator must not be zero.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="RTO_MO_PQ">
        <xs:annotation>
            <xs:appinfo>
                <diff>RTO_MO_PQ</diff>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexContent mixed="false">
            <xs:extension base="q37:QTY" xmlns:q37="urn:hl7-org:v3">
                <xs:sequence>
                    <xs:element name="numerator" type="q37:MO">
                        <xs:annotation>
                            <xs:documentation>
                                The quantity that is being divided in the ratio. The
                                default is the integer number 1 (one).
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="denominator" type="q37:PQ">
                        <xs:annotation>
                            <xs:documentation>
                                The quantity that devides the numerator in the ratio.
                                The default is the integer number 1 (one).
                                The denominator must not be zero.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="UVP_TS">
        <xs:complexContent mixed="false">
            <xs:extension base="q38:TS" xmlns:q38="urn:hl7-org:v3">
                <xs:attribute name="probability" type="q38:probability" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            The probability assigned to the value, a decimal number
                            between 0 (very uncertain) and 1 (certain).
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
</xs:schema>