<codeTemplateLibrary version="3.7.0">
  <id>5d2a129c-da07-49cc-950c-d941a93cd271</id>
  <name>OBIB</name>
  <revision>27</revision>
  <lastModified>
    <time>1554328808574</time>
    <timezone>Etc/UTC</timezone>
  </lastModified>
  <description></description>
  <includeNewChannels>false</includeNewChannels>
  <enabledChannelIds>
    <string>b2f0c503-a881-4126-995e-844c3e7692fd</string>
    <string>2375f320-7fd5-48cd-b3bb-53c22dab182b</string>
  </enabledChannelIds>
  <disabledChannelIds/>
  <codeTemplates>
    <codeTemplate version="3.7.0">
      <id>9914a610-67bc-42b7-aa87-6a693ed1800c</id>
      <name>Build CDA Address</name>
      <revision>11</revision>
      <lastModified>
        <time>1552676615741</time>
        <timezone>Etc/UTC</timezone>
      </lastModified>
      <contextSet>
        <delegate>
          <contextType>SOURCE_RECEIVER</contextType>
          <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
          <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
          <contextType>DESTINATION_DISPATCHER</contextType>
        </delegate>
      </contextSet>
      <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
        <type>FUNCTION</type>
        <code>/**
	Build a XML address tag based on &apos;4.2.1.2. Addresses&apos;

	@param {String} use - 
	@param {String} streetAddress - 
	@param {String} city - 
	@param {String} state - 
	@param {String} postalCode - 
	@param {String} country - 
	@return {Object} return the XML address tag
*/
function buildCDAAddress(use, streetAddress, city, state, postalCode, country) {
	var addr = new XML(&quot;&lt;addr&gt;&quot; + streetAddress + &quot;&lt;delimiter/&gt;&lt;/addr&gt;&quot;); // CONF-BC0039
  	addr[&apos;@use&apos;] = use; // CONF-BC0041
  	addr[&apos;city&apos;] = city 
  	addr[&apos;state&apos;] = state; // CONF-BC0045
  	addr[&apos;postalCode&apos;] = postalCode;
  	if (country) {
  		addr[&apos;country&apos;] = country; // CONF-BC0044
  	}
  	return addr;
}</code>
      </properties>
    </codeTemplate>
    <codeTemplate version="3.7.0">
      <id>d56207a8-0d51-40fb-9437-73815405b6a2</id>
      <name>Build CDA ID</name>
      <revision>9</revision>
      <lastModified>
        <time>1552929329851</time>
        <timezone>Etc/UTC</timezone>
      </lastModified>
      <contextSet>
        <delegate>
          <contextType>SOURCE_RECEIVER</contextType>
          <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
          <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
          <contextType>DESTINATION_DISPATCHER</contextType>
        </delegate>
      </contextSet>
      <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
        <type>FUNCTION</type>
        <code>/**
	Build a XML id tag

	@param {String} root - 
	@param {String} extension - 
	@return {Object} return the XML id tag
*/
function buildCDAId(root, extension) {
	if (extension) {
		var id = new XML(&apos;&lt;id/&gt;&apos;);
	  	id[&apos;@extension&apos;] = extension;
		if (root) {
		  	id[&apos;@root&apos;] = root;
		  	// Get the authority name from the GlobalMap (CDA properties)
		  	var authName = globalMap.get(root);
		  	if (authName) {
		  		id[&apos;@assigningAuthorityName&apos;] = authName;
		  	}
		}
	  	return id;
	}
	return new XML(&apos;&lt;id nullFlavor=&quot;NA&quot; /&gt;&apos;);
}

</code>
      </properties>
    </codeTemplate>
    <codeTemplate version="3.7.0">
      <id>aaee9682-0184-43e5-a80b-32615c89dae0</id>
      <name>Build CDA Name</name>
      <revision>13</revision>
      <lastModified>
        <time>1553895164932</time>
        <timezone>Etc/UTC</timezone>
      </lastModified>
      <contextSet>
        <delegate>
          <contextType>SOURCE_RECEIVER</contextType>
          <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
          <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
          <contextType>DESTINATION_DISPATCHER</contextType>
        </delegate>
      </contextSet>
      <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
        <type>FUNCTION</type>
        <code>/**
	Build a XML name tag based on &apos;4.2.1.1. Person Names&apos;

	@param {String} use -
	@param {String} family -
	@param {String} given -
	@param {String} prefix -
	@param {String} suffix -
	@return {Object} return the XML name tag
*/
function buildCDAName(use, family, given, prefix, suffix) {
	var name = new XML(&quot;&lt;name/&gt;&quot;);
  	name[&apos;@use&apos;] = use; // CONF-BC0038
  	name[&apos;family&apos;] = family;
  	if (given instanceof Array) { // CONF-BC0031, CONF-BC0034
  		for (var i = 0; i &lt; given.length; i++) {
  			name[&apos;given&apos;][i] = given[i];
  		}
  	} else {
  		name[&apos;given&apos;] = given;
  	}
  	if (prefix) { // CONF-BC0035
  		name[&apos;prefix&apos;] = prefix;
  	}
  	if (suffix) { // CONF-BC0036
  		name[&apos;suffix&apos;] = suffix;
  	}
  	return name;
}</code>
      </properties>
    </codeTemplate>
    <codeTemplate version="3.7.0">
      <id>39f73e3c-ac8d-46ee-904c-32d6a73d93c0</id>
      <name>Build CDA Telecom</name>
      <revision>11</revision>
      <lastModified>
        <time>1553898011696</time>
        <timezone>Etc/UTC</timezone>
      </lastModified>
      <contextSet>
        <delegate>
          <contextType>SOURCE_RECEIVER</contextType>
          <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
          <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
          <contextType>DESTINATION_DISPATCHER</contextType>
        </delegate>
      </contextSet>
      <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
        <type>FUNCTION</type>
        <code>/**
	Build a XML telecom tag

	@param {String} use - &apos;H&apos; = home, &apos;W&apos; = work, &apos;M&apos; = mobile
	@param {String} type - &apos;tel&apos; or &apos;email&apos;
	@param {String} value - number of telefone or email address
	@return {Object} return the XML telecom tag
*/
function buildCDATelecom(use, type, value) {
	var telecom = new XML(&quot;&lt;telecom/&gt;&quot;);
  	telecom[&apos;@use&apos;] = use;
  	telecom[&apos;@value&apos;] = type + &quot;:&quot; + value;
  	return telecom;
}</code>
      </properties>
    </codeTemplate>
    <codeTemplate version="3.7.0">
      <id>60bfd3ac-552a-4d59-ac1d-48fbe4f430b2</id>
      <name>Create Error Message</name>
      <revision>5</revision>
      <lastModified>
        <time>1552674434307</time>
        <timezone>Etc/UTC</timezone>
      </lastModified>
      <contextSet>
        <delegate>
          <contextType>SOURCE_RECEIVER</contextType>
          <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
          <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
          <contextType>DESTINATION_DISPATCHER</contextType>
        </delegate>
      </contextSet>
      <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
        <type>FUNCTION</type>
        <code>/**
	Create JSON error message

	@param {String} error - 
	@return {String} return the JSON response
*/
function createErrorMessage(error) {
	return JSON.stringify({&apos;status&apos;: &apos;ERROR&apos;, &apos;message&apos;: error});
}</code>
      </properties>
    </codeTemplate>
    <codeTemplate version="3.7.0">
      <id>f1de696c-f547-49ae-8225-f7e40ed2c87c</id>
      <name>Create Segment Before</name>
      <revision>3</revision>
      <lastModified>
        <time>1554154308153</time>
        <timezone>Etc/UTC</timezone>
      </lastModified>
      <contextSet>
        <delegate>
          <contextType>SOURCE_RECEIVER</contextType>
          <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
          <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
          <contextType>DESTINATION_DISPATCHER</contextType>
        </delegate>
      </contextSet>
      <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
        <type>FUNCTION</type>
        <code>/**
	Create a new segment and insert it before the target segment.
	
	@param {String} name - The name of the segment to create.
	@param {String} segment - The existing segment that the new segment will be inserted before.
	@return {String} return The existing segment that the new segment will be inserted after.
*/
function createSegmentBefore(name, segment) {
	var msgObj = segment;
   	while (msgObj.parent() != undefined) { 
		msgObj = msgObj.parent(); 
	}
     msgObj.insertChildBefore(segment[0], new XML(&apos;&lt;&apos; + name + &apos;&gt;&lt;/&apos; + name + &apos;&gt;&apos;));
   	return msgObj.child(segment[0].childIndex() - 1);
}
</code>
      </properties>
    </codeTemplate>
    <codeTemplate version="3.7.0">
      <id>07a8a226-a4d4-4248-b816-00011d888d0f</id>
      <name>Format CDA Date/Time</name>
      <revision>10</revision>
      <lastModified>
        <time>1553720158917</time>
        <timezone>Etc/UTC</timezone>
      </lastModified>
      <contextSet>
        <delegate>
          <contextType>SOURCE_RECEIVER</contextType>
          <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
          <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
          <contextType>DESTINATION_DISPATCHER</contextType>
        </delegate>
      </contextSet>
      <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
        <type>FUNCTION</type>
        <code>/**
	Format the date/time for the CDA

	@param {String} dateTime - 
	@return {String} return the formated dateTime
*/
function formatCDAdataTime(dateTime) {
	if (dateTime.length &lt;= 10) {
		return DateUtil.formatDate(&apos;yyyyMMdd&apos;, new Date(dateTime));
	}
	return DateUtil.formatDate(&apos;yyyyMMddHHmmZZZ&apos;, new Date(dateTime));
}</code>
      </properties>
    </codeTemplate>
    <codeTemplate version="3.7.0">
      <id>e83b8bbf-433a-4c3d-88a2-16f4132b38af</id>
      <name>Handle Return Message</name>
      <revision>10</revision>
      <lastModified>
        <time>1553021983347</time>
        <timezone>Etc/UTC</timezone>
      </lastModified>
      <contextSet>
        <delegate>
          <contextType>SOURCE_RECEIVER</contextType>
          <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
          <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
          <contextType>DESTINATION_DISPATCHER</contextType>
        </delegate>
      </contextSet>
      <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
        <type>FUNCTION</type>
        <code>/**
	Handle the return message creation.

	@param {Object} responseStatus - 
	@param {Object} responseStatusMessage - 
	@param {Object} responseMessage - 
	@param {Function} createMessage - Callback function responsible for creating and return the result message.
	@return {String} return the stringify json message
*/
function handleResponseMessage(responseStatus, responseStatusMessage, responseMessage, createMessage) {
	if (responseStatus === SENT) { // process only SENT messages
		return JSON.stringify(createMessage()); // Convert the json to string and return it
	} else if (responseStatus === ERROR) {
		throw &quot;Error Message: &apos;&quot; + responseStatusMessage.toString() 
			+ &quot;&apos;\n Original Message: &apos;&quot; + msg.toString() + &quot;&apos;&quot;;
	} else {
		throw &quot;Not able to handle the response code: &apos;&quot; + responseStatus 
		+ &quot;&apos; \n Error Message: &apos;&quot; + responseStatusMessage.toString() 
		+ &quot;&apos;\n Original Message: &apos;&quot; + msg.toString() + &quot;&apos;&quot;;
	}
}
</code>
      </properties>
    </codeTemplate>
    <codeTemplate version="3.7.0">
      <id>f4743440-d5d2-44f2-acd9-35746c48d9b3</id>
      <name>Parse CDA Address</name>
      <revision>14</revision>
      <lastModified>
        <time>1554329524703</time>
        <timezone>Etc/UTC</timezone>
      </lastModified>
      <contextSet>
        <delegate>
          <contextType>SOURCE_RECEIVER</contextType>
          <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
          <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
          <contextType>DESTINATION_DISPATCHER</contextType>
        </delegate>
      </contextSet>
      <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
        <type>FUNCTION</type>
        <code>/**
	Parse the CDA Address to JSON Object

	@param {String} cdaAddress - 
	@return {String} return the parsed Address object
*/
function parseCDAAddress(cdaAddress) {
	var addr = {};
	// Try to get the street address from the body of the tag &lt;addr&gt; (Document format)
	var strtAddr = cdaAddress.toString().match(/.+?(?=&lt;delimiter\/&gt;)/);
	if (strtAddr) {
		addr[&apos;streetAddress&apos;] = strtAddr[0]; 
	}
	// Try to append the list of &apos;delimiters&apos; (List clinics/providers format)
	for (var i = 0; i &lt; getArrayOrXmlLength(cdaAddress[&apos;delimiter&apos;]); i++) {
		addr[&apos;streetAddress&apos;] = (addr[&apos;streetAddress&apos;] ? addr[&apos;streetAddress&apos;] + &apos; &apos; : &apos;&apos;) + cdaAddress[&apos;delimiter&apos;][i].toString();
	}
	if (cdaAddress[&apos;city&apos;]) {
		addr[&apos;city&apos;] = cdaAddress[&apos;city&apos;].toString();
	}
	if (cdaAddress[&apos;province&apos;]) {
		addr[&apos;province&apos;] = cdaAddress[&apos;state&apos;].toString();
	}
	if (cdaAddress[&apos;postalCode&apos;]) {
		addr[&apos;postalCode&apos;] = cdaAddress[&apos;postalCode&apos;].toString();
	}
	if (cdaAddress[&apos;country&apos;]) {
		addr[&apos;country&apos;] = cdaAddress[&apos;country&apos;].toString();
	}
	return addr;
}</code>
      </properties>
    </codeTemplate>
    <codeTemplate version="3.7.0">
      <id>41f1daa2-e22b-439a-b0b5-16bc108c007e</id>
      <name>Parse CDA Date/Time</name>
      <revision>16</revision>
      <lastModified>
        <time>1553720196630</time>
        <timezone>Etc/UTC</timezone>
      </lastModified>
      <contextSet>
        <delegate>
          <contextType>SOURCE_RECEIVER</contextType>
          <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
          <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
          <contextType>DESTINATION_DISPATCHER</contextType>
        </delegate>
      </contextSet>
      <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
        <type>FUNCTION</type>
        <code>/**
	Parse the CDA Date/Time to Date object

	@param {String} cdaDateTime - 
	@return {String} return the Date object
*/
function parseCDADateTime(cdaDateTime) {
	if (cdaDateTime.length &lt;= 8) {
		return DateUtil.convertDate(&quot;yyyyMMdd&quot;, &quot;yyyy-MM-dd&quot;, cdaDateTime);
	}
	return DateUtil.convertDate(&quot;yyyyMMddHHmmZZZ&quot;, &quot;yyyy-MM-dd\&apos;T\&apos;HH:mm:ssZ&quot;, cdaDateTime);
}</code>
      </properties>
    </codeTemplate>
    <codeTemplate version="3.7.0">
      <id>a2f73260-eb70-4dcc-8b8a-9350c3bec9fd</id>
      <name>Parse CDA ID</name>
      <revision>3</revision>
      <lastModified>
        <time>1554154308113</time>
        <timezone>Etc/UTC</timezone>
      </lastModified>
      <contextSet>
        <delegate>
          <contextType>SOURCE_RECEIVER</contextType>
          <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
          <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
          <contextType>DESTINATION_DISPATCHER</contextType>
        </delegate>
      </contextSet>
      <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
        <type>FUNCTION</type>
        <code>/**
	Parse the CDA Id to JSON object

	@param {String} cdaID - 
	@return {String} return the parsed ID object
*/
function parseCDAId(cdaID) {
	var id = {};
	id[&apos;code&apos;] = cdaID[&apos;@extension&apos;].toString();
	id[&apos;type&apos;] = cdaID[&apos;@root&apos;].toString();
	return id;
}</code>
      </properties>
    </codeTemplate>
    <codeTemplate version="3.7.0">
      <id>a0354d90-ffa8-47c5-9776-e41927d2f0d0</id>
      <name>Parse CDA Name</name>
      <revision>3</revision>
      <lastModified>
        <time>1553723251550</time>
        <timezone>Etc/UTC</timezone>
      </lastModified>
      <contextSet>
        <delegate>
          <contextType>SOURCE_RECEIVER</contextType>
          <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
          <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
          <contextType>DESTINATION_DISPATCHER</contextType>
        </delegate>
      </contextSet>
      <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
        <type>FUNCTION</type>
        <code>/**
	Parse the CDA Name to JSON object

	@param {String} cdaName - 
	@return {String} return the parsed Name object
*/
function parseCDAName(cdaName) {
	var name = {};
	name[&apos;family&apos;] = cdaName[&apos;family&apos;].toString();
	name[&apos;given&apos;] = [];
	for (var i = 0; i &lt; getArrayOrXmlLength(cdaName[&apos;given&apos;]); i++) {
		name[&apos;given&apos;][i] = cdaName[&apos;given&apos;][i].toString();
	}
	if (cdaName[&apos;prefix&apos;]) {
		name[&apos;prefix&apos;] = cdaName[&apos;prefix&apos;].toString();
	}
	if (cdaName[&apos;suffix&apos;]) {
		name[&apos;suffix&apos;] = cdaName[&apos;suffix&apos;].toString();
	}
	return name;
}</code>
      </properties>
    </codeTemplate>
    <codeTemplate version="3.7.0">
      <id>407e6d63-57cf-42f8-b555-5d6c575f4f55</id>
      <name>Parse CDA Telecom</name>
      <revision>1</revision>
      <lastModified>
        <time>1553204828860</time>
        <timezone>Etc/UTC</timezone>
      </lastModified>
      <contextSet>
        <delegate>
          <contextType>SOURCE_RECEIVER</contextType>
          <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
          <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
          <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
          <contextType>DESTINATION_DISPATCHER</contextType>
        </delegate>
      </contextSet>
      <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
        <type>FUNCTION</type>
        <code>/**
	Parse the CDA Telecom to JSON object

	@param {String} telecom - 
	@return {String} return the parsed Telecom object
*/
function parseCDATelecom(cdaTelecom) {
	var telecom = {};
	telecom[&apos;use&apos;] = cdaTelecom[&apos;@use&apos;];
	var telParts = cdaTelecom[&apos;@value&apos;].split(&apos;:&apos;);
	telecom[&apos;type&apos;] = telParts[0];	
	telecom[&apos;value&apos;] = telParts[1];
	return telecom;
}</code>
      </properties>
    </codeTemplate>
  </codeTemplates>
</codeTemplateLibrary>